链接过程控制
链接器的一般有三种控制整个链接的过程的方法
1：
	使用命令行来个链接器指定参数。
2：
	将链接指令存放在目标文件里面，编译器经常会通过这种方法向链接器传递指令，例如VC++编译器经常会把链接参数放在PE目标文件的
	.drectve段以用来传递参数。
3：
	使用链接器控制脚本。

GCC的参数的含义
-fno-builtin GCC编译器提供了很多内置函数（bulit-in function），它会把一些常用的C库函数替换成编译器的内置函数，以达到优化的功能，
-c 只是编译不链接，不加找个参数的话就是直接的链接了
比如GCC会将只有字符串参数的printf函数替换成puts，以节省格式解析的时间，exit（）函数也是gcc的内置参数之一，所以我们要关闭这个
ld链接器的参数的含义
-static 这个参数表示ld将使用静态链接的方式来链接程序，而不是使用默认的动态链接的方式。
-e nomain 表示该程序的入口函数为nomain，这个参数就是将ELF文件头的e_entry 成员赋值成nomain函数的地址。
-T .ld 指定的链接脚本

当我们使用ld链接器的时候，没有指定链接脚本，其实ld在用户没有指定链接脚本的时候会使用默认的链接脚本。ld -verbose 显示默认的链接的脚本
通常ELF可执行文件的起始虚拟地址为0x08048000,
	ld链接脚本语法简介
ENTRY（symbol）指定符号symbol的值为入口地址，入口地址即进程执行的第一条用户空间的指令在进程地址空间的地址，他被指定在
ELF文件头ELF32_Ehdr的e_entry成员中，ld有多种方法设置进程入口地址，他们之间的优先级按以下的顺序排列。
1：ld的命令行的-e的选项
2：链接脚本的ENTRY（symbol）命令
3：如果定义了_start符号，使用_start符号值 	
4：如果存在.text段，使用.text段的第一个字节的地址
5：使用值0


